package com.lucasmoraist.templa.infra.mapper;

import com.lucasmoraist.templa.domain.model.Course;
import com.lucasmoraist.templa.domain.model.Group;
import com.lucasmoraist.templa.infra.db.entity.GroupEntity;
import com.lucasmoraist.templa.infra.web.request.group.GroupRequest;
import com.lucasmoraist.templa.infra.web.response.group.GroupResponse;

import java.util.List;

public final class GroupMapper {

    public static Group toDomain(GroupRequest request) {
        return new Group(
                null, // ID will be generated by the database
                request.dayOfWeek(),
                request.startTime(),
                request.endTime(),
                request.maxStudents(),
                null // Course will be set later when mapping to entity
        );
    }

    public static List<Group> toDomainList(List<GroupEntity> groups) {
        return groups.stream()
                .map(GroupMapper::toDomain)
                .toList();
    }

    public static GroupEntity toEntity(Group group, Course course) {
        return new GroupEntity(
                group.id(),
                group.dayOfWeek(),
                group.startTime(),
                group.endTime(),
                group.maxStudents(),
                CourseMapper.toEntity(course)
        );
    }

    public static List<GroupEntity> toEntityList(List<Group> groups) {
        return groups.stream()
                .map(GroupMapper::toEntity)
                .toList();
    }

    public static Group toDomain(GroupEntity groupEntity) {
        return new Group(
                groupEntity.getId(),
                groupEntity.getDayOfWeek(),
                groupEntity.getStartTime(),
                groupEntity.getEndTime(),
                groupEntity.getMaxStudents(),
                null
        );
    }

    public static GroupResponse toResponse(Group group) {
        return new GroupResponse(
                group.id().toString(),
                group.dayOfWeek().getValue(),
                group.startTime().toString(),
                group.endTime().toString(),
                group.maxStudents()
        );
    }

    public static List<GroupResponse> toResponseList(List<Group> groups) {
        return groups.stream()
                .map(GroupMapper::toResponse)
                .toList();
    }

    private static GroupEntity toEntity(Group group) {
        return new GroupEntity(
                group.id(),
                group.dayOfWeek(),
                group.startTime(),
                group.endTime(),
                group.maxStudents(),
                null
        );
    }

}
