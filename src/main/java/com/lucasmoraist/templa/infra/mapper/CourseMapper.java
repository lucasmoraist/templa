package com.lucasmoraist.templa.infra.mapper;

import com.lucasmoraist.templa.domain.enums.Roles;
import com.lucasmoraist.templa.domain.model.Course;
import com.lucasmoraist.templa.infra.db.entity.CourseEntity;
import com.lucasmoraist.templa.infra.web.request.course.CreateCourseRequest;
import com.lucasmoraist.templa.infra.web.response.course.CourseResponse;

import java.util.List;

public final class CourseMapper {

    public static Course toDomain(CourseEntity entity) {
        return new Course(
                entity.getId(),
                entity.getName(),
                entity.getDescription(),
                entity.getModality(),
                GroupMapper.toDomainList(entity.getGroups())
        );
    }

    public static Course toDomain(CreateCourseRequest request) {
        return new Course(
                null, // ID will be generated by the database
                request.name(),
                request.description(),
                request.modality(),
                List.of()
        );
    }

    public static CourseEntity toEntity(Course course) {
        return new CourseEntity(
                course.id(),
                course.name(),
                course.description(),
                course.modality(),
                GroupMapper.toEntityList(course.groups())
        );
    }

    public static CourseResponse toResponse(Course course, Roles role) {
        return new CourseResponse(
                course.id().toString(),
                course.name(),
                course.description(),
                course.modality().getDescription(),
                Roles.TEACHER.equals(role) ? GroupMapper.toResponseList(course.groups()) : List.of()
        );
    }

}
